import Head from "next/head";
import Sidebar from "@components/Sidebar";
import Modal from "@components/Modal";
import { getProviders, getSession, useSession } from "next-auth/react";
import Login from "@components/Login";
import { useRecoilState } from "recoil";
import { modalState } from "atoms/moduleAtom";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { collection, doc, onSnapshot } from "firebase/firestore";
import { db } from "config/firebase";
import { ArrowLeftIcon } from "@heroicons/react/outline";
import Post from "@components/Post";
import Comment from "@components/Comment";
import Widget from "@components/Widget";

export async function getServerSideProps(ctx) {
  // Fetching data api widget trending
  const reqTrendingResult = await fetch("https://jsonkeeper.com/b/NKEV");
  const trendingResult = await reqTrendingResult.json();

  // Fetching data api widget follow
  const reqFollowResult = await fetch("https://jsonkeeper.com/b/WWMJ");
  const followResult = await reqFollowResult.json();

  const providers = await getProviders(); // google
  const session = await getSession(ctx); // session => cookie

  return {
    props: {
      trendingResult,
      followResult,
      providers,
      session,
    },
  };
}

export default function Home({ trendingResult, followResult, providers }) {
  const { data: session } = useSession();
  const [isOpen, setIsOpen] = useRecoilState(modalState);
  const [post, setPost] = useState();
  const [comments, setComments] = useState([]);
  const router = useRouter();
  const { id } = router.query;

  // put the data from firestore where id is same with id the users clicked
  useEffect(() => {
    onSnapshot(doc(db, "posts", id), (snapshot) => setPost(snapshot.data()));
  }, [db, id]);

  useEffect(() => {
    onSnapshot(collection(db, "posts", id, "comments"), (snapshot) =>
      setComments(snapshot.docs)
    );
  }, [db, id]);

  if (!session) return <Login providers={providers} />;

  return (
    <>
      <Head>
        <title>
          {post?.username} on Twitter: {post?.text}
        </title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className="mx-auto flex min-h-screen max-w-[1500px] bg-black">
        <Sidebar />
        <div className="max-w-2xl flex-grow border-l border-r border-gray-700 sm:ml-[73px] xl:ml-[370px]">
          <div className="sticky top-0 z-50 flex items-center gap-x-4 border-b border-gray-700 bg-black px-1.5 py-2 text-xl font-semibold text-secondary">
            <div
              className="hoverAnimation flex h-9 w-9 items-center justify-center xl:px-0"
              onClick={() => router.push("/")}
            >
              <ArrowLeftIcon className="h-5 text-white" />
            </div>
            Tweet
          </div>

          <Post id={id} post={post} postPage />
          {comments.length > 0 && (
            <div className="pb-72">
              {comments.map((comment) => (
                <Comment
                  key={comment.id}
                  id={comment.id}
                  comment={comment.data()}
                />
              ))}
            </div>
          )}
        </div>

        <Widget followResult={followResult} trendingResult={trendingResult} />

        {isOpen && <Modal />}
      </main>
    </>
  );
}
